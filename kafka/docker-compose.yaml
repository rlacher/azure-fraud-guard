# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Ren√© Lacher
# Kafka broker setup for Fraud Guard MVP project

services:
  kafka:
    image: apache/kafka:3.9.1
    container_name: kafka-kraft
    ports:
    - "9092:9092"  # Kafka broker port
    - "9093:9093"  # KRaft controller communication port
    restart: unless-stopped
    environment:
    # Single-node KRaft mode
    - KAFKA_NODE_ID=1
    - KAFKA_PROCESS_ROLES=broker,controller
    - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-kraft:9093
    - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-kraft:9092
    - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    # Log directory inside container mapped to named volume
    - KAFKA_LOG_DIRS=/var/lib/kafka/data
    # Topic will be created by a dedicated init service
    - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
    healthcheck:
      # Minimal check if broker port is listening
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
    - kafka-data:/var/lib/kafka/data
    networks:
    - kafka-net

  topic-creator:
      image: apache/kafka:3.9.1
      container_name: kafka-topic-creator
      depends_on:
        kafka:
          condition: service_healthy
      networks:
        - kafka-net
      command: ["/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "kafka-kraft:9092", "--create", "--topic", "transactions"]
      restart: no

  producer:
    build:
      context: ../data
      args:
      - DATA_FILENAME=${DATA_FILENAME}
    environment:
      - DATA_FILENAME=${DATA_FILENAME}
    container_name: kafka-producer
    command: python3 producer.py
    depends_on:
      topic-creator:
        condition: service_completed_successfully
    networks:
      - kafka-net
    restart: on-failure

volumes:
  kafka-data:

networks:
  kafka-net:
    driver: bridge
